package com.abu.project.controller;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttribute;
import org.springframework.web.bind.annotation.SessionAttributes;

import com.abu.project.model.Register;
import com.abu.project.service.ProjectService;

@Controller
@SessionAttributes("username")
public class ProjectController 
{
	@Autowired
	ProjectService service;

	public ProjectService getService() {
		return service;
	}

	public void setService(ProjectService service) {
		this.service = service;
	}
	
	
	@RequestMapping(value="/login" , method=RequestMethod.GET)
	public String welcome()
	{	
		return "login";
	}
	
	@RequestMapping(value="/validatelogin" , method=RequestMethod.POST)
	public String validateUser(@RequestParam("username") String uid,@RequestParam("password") String pwd, ModelMap map)
	{
		map.addAttribute("username", uid);
		String pro=service.validateAdmin(uid,pwd);
		if(pro.equals("User"))
		{
			int i=service.getStatus(uid);
			if(i==0)
			{
			service.updateStatus(uid);
			return "user";
			}
			else
				return "loginagain";
		
		}
		else if(pro.equals("Admin"))
		{
				int a=service.getStatus(uid);
				if(a==0)
				{
				service.updateStatus(uid);
				return "userAdmin";
				}
				else
					return "loginagain";
		}
		else
			return "login";
	}
	
	@RequestMapping(value="/logout", method=RequestMethod.GET)
	public String logout(@SessionAttribute("username") String uid)
	{
		System.out.println("inside logout controller "+uid);
		boolean b=service.logoutSession(uid);
		if(b)
		return "logout";
		else
			return null;
	}
	
	@RequestMapping(value="/register", method=RequestMethod.GET)
	public String register(ModelMap map)
	{
		Register register=new Register();
		
		map.addAttribute("command", register);
		return "register";
	}
	
	@RequestMapping(value="/save", method=RequestMethod.POST)
	public String saveRegister(@ModelAttribute("command") @Valid Register register, BindingResult errors)
	{
		
		if(errors.hasErrors())
			return "register";
		service.userRegister(register);
		
		return "redirect:/loginuser";
		
	}
	
	@RequestMapping(value="/loginuser", method=RequestMethod.GET)
	public String loginuser() 
	{
		return "userlogin";
	}
	
	@RequestMapping(value="/validateUserLogin" , method=RequestMethod.POST)
	public String validateUserLogin(@RequestParam("userid") String uid,@RequestParam("password") String pwd, ModelMap map)
	{
		Boolean pro=service.validateUser(uid,pwd);
		if(pro)
		{
			int i=service.getUserStatus(uid);
			if(i==0)
			{
				service.updateUserStatus(uid);
				return "userprofile";
			}
			else
				return "userloginagain";
		}
		else
			return "userlogin";
		
	}
}
